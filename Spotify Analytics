For this project, I downloaded Spotify data from Kaggle. I created a table to insert Spotify data into.
Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)
 I later inserted the Spotify Data .csv into the table.

Next, I explored the data using the following SQL. 

First I determined the average danceability, popularity, and duration by artist and track. 

SELECT artist_name, track_name, avg(danceability), avg(popularity), avg(duration_ms) 
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name; 

I also wanted to figure out the top 10 artists from the data set based on popularity. 

SELECT artist_name, track_name 
FROM BIT_DB.Spotifydata
ORDER BY popularity
LIMIT 10; 

Lastly, I wanted to see the average danceability for the top 10 songs for the Spotify project.

SELECT artist_name, track_name, Avg(danceability) 
FROM BIT_DB.Spotifydata
GROUP BY popularity 
LIMIT 10;

I also wanted to create/practice a CTE for this data. I wanted to calculate the average popularity for the artists in the Spotify data table. 
Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH popularity_average_CTE AS(
SELECT s.artist_name, 
avg(s.popularity) AS average_popularity
FROM Spotifydata s
GROUP BY s.artist_name  )

SELECT artist_name, average_popularity, 'Top Star' AS tag 
FROM popularity_average_CTE
WHERE average_popularity >= 90;
